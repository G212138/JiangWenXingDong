{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\OptionItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ListenerManager } from \"../../../../frame/scripts/Manager/ListenerManager\";\r\nimport { HitTest } from \"../../../../frame/scripts/Utils/HitTest\";\r\nimport { EventType } from \"../../Data/EventType\";\r\nimport { EditorManager } from \"../../Manager/EditorManager\";\r\nimport FillArea from \"./FillArea\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OptionItem extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    private optionParent: cc.Node = null;\r\n    @property(cc.Node)\r\n    private fillArea: cc.Node = null;\r\n    @property(cc.Node)\r\n    private fillArea2: cc.Node = null;\r\n\r\n    private onDragStart(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n    }\r\n\r\n    private onDragMove(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        ListenerManager.dispatch(EventType.DRAG_OPTION, pos);\r\n    }\r\n\r\n    private onDragEnd(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        if(EditorManager.editorData.gameIndex == 3) {\r\n            if (HitTest.posInRect(new cc.Vec2(pos.x, pos.y), this.fillArea)) {\r\n                this.fillArea.getComponent(FillArea).fill(this.node);\r\n            } else if (HitTest.posInRect(new cc.Vec2(pos.x, pos.y), this.fillArea2)) {\r\n                this.fillArea2.getComponent(FillArea).fill(this.node);\r\n            } else {\r\n                this.reset();\r\n            }\r\n            ListenerManager.dispatch(EventType.DRAG_OPTION_END);\r\n            return;\r\n        }\r\n        if (HitTest.posInRect(new cc.Vec2(pos.x, pos.y), this.fillArea)) {\r\n            this.fillArea.getComponent(FillArea).fill(this.node);\r\n        } else {\r\n            this.reset();\r\n        }\r\n        ListenerManager.dispatch(EventType.DRAG_OPTION_END);\r\n    }\r\n\r\n    public reset() {\r\n        this.node.parent = this.optionParent;\r\n        this.node.position = cc.v3(0, 0);\r\n    }\r\n}\r\n"]}