{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\OptionItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qFAAoF;AACpF,+EAA8E;AAC9E,mEAAkE;AAClE,kDAAiD;AACjD,uCAAkC;AAClC,6CAA4C;AAGtC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAwC,8BAAY;IAApD;QAAA,qEAqCC;QAnCW,kBAAY,GAAY,IAAI,CAAC;QAE7B,cAAQ,GAAY,IAAI,CAAC;;IAiCrC,CAAC;IA/BW,gCAAW,GAAnB,UAAoB,KAAK;QACrB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,iCAAe,CAAC,QAAQ,CAAC,qBAAS,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAEO,+BAAU,GAAlB,UAAmB,KAAK;QACpB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,iCAAe,CAAC,QAAQ,CAAC,qBAAS,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACzD,CAAC;IAEO,8BAAS,GAAjB,UAAkB,KAAK;QAAvB,iBAeC;QAdG,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,IAAI,QAAQ,GAAY,KAAK,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI;YAChC,IAAI,iBAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,kBAAQ,CAAC,EAAE;gBACnF,QAAQ,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;aAC/C;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE;YACX,2BAAY,CAAC,UAAU,CAAC,yBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;QACD,iCAAe,CAAC,QAAQ,CAAC,qBAAS,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IAEM,0BAAK,GAAZ;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAlCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACmB;IAErC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACe;IAJhB,UAAU;QAD9B,OAAO;OACa,UAAU,CAqC9B;IAAD,iBAAC;CArCD,AAqCC,CArCuC,EAAE,CAAC,SAAS,GAqCnD;kBArCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import { ListenerManager } from \"../../../../frame/scripts/Manager/ListenerManager\";\r\nimport { SoundManager } from \"../../../../frame/scripts/Manager/SoundManager\";\r\nimport { HitTest } from \"../../../../frame/scripts/Utils/HitTest\";\r\nimport { EventType } from \"../../Data/EventType\";\r\nimport FillArea from \"./FillArea\";\r\nimport { SoundConfig } from \"./SoundConfig\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OptionItem extends cc.Component {\r\n    @property(cc.Node)\r\n    private optionParent: cc.Node = null;\r\n    @property(cc.Node)\r\n    private fillArea: cc.Node = null;\r\n\r\n    private onDragStart(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        ListenerManager.dispatch(EventType.DRAG_OPTION_START, pos);\r\n    }\r\n\r\n    private onDragMove(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        ListenerManager.dispatch(EventType.DRAG_OPTION, pos);\r\n    }\r\n\r\n    private onDragEnd(event) {\r\n        let pos = event.target.parent.convertToWorldSpaceAR(cc.v2(event.pos.x, event.pos.y));\r\n        let isInRect: boolean = false;\r\n        this.fillArea.children.forEach((area) => {\r\n            if (HitTest.posInRect(new cc.Vec2(pos.x, pos.y), area) && area.getComponent(FillArea)) {\r\n                isInRect = true;\r\n                area.getComponent(FillArea).fill(this.node);\r\n            }\r\n        });\r\n\r\n        if (!isInRect) {\r\n            SoundManager.playEffect(SoundConfig.soudlist[\"错误反馈\"], false, false, false);\r\n            this.reset();\r\n        }\r\n        ListenerManager.dispatch(EventType.DRAG_OPTION_END);\r\n    }\r\n\r\n    public reset() {\r\n        this.node.parent = this.optionParent;\r\n        this.node.position = cc.v3(0, 0);\r\n    }\r\n}\r\n"]}